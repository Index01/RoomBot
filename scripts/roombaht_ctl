#!/usr/bin/env bash

set -e

SCRIPTDIR=$( cd "${0%/*}" && pwd)
ROOTDIR="${SCRIPTDIR%/*}"

problems() {
    2>&1 echo "Error: $*"
    exit 1
}

cleanup() {
    if [ -e "$ENV_FILE" ] ; then
	rm "$ENV_FILE"
    fi
}

usage() {
    echo "roombaht_ctl <user> <hostname> <env> init <rooms dot csv> <staff dot csv>"
    echo "                             -f         force wipe, otherwise asks"
    echo
    echo "roombaht_ctl <user> <hostname> <env> frontend-log"
    echo "roombaht_ctl <user> <hostname> <env> backend-log"
    echo "roombaht_ctl <user> <hostname> <env> wipe"
}

trap cleanup EXIT

[ $# -lt 3 ] && ( usage ; exit 1 )

R_USER="$1"
R_HOST="$2"
R_ENV="$3"
ACTION="$4"
shift 4

ENV_FILE="${ROOTDIR}/secrets/${R_ENV}.env"
ENC_FILE="${ROOTDIR}/config/${R_ENV}.enc"

[ -e "$ENV_FILE" ] && problems "plaintext secrets present"
[ -e "$ENC_FILE" ] || problems "env file not found"

if [ "$ACTION" == "init" ] ; then
    ROOM_FILE="$1"
    STAFF_FILE="$2"
    shift 2
    if [ ! -e "$ROOM_FILE" ] ; then
	problems "room file ${ROOM_FILE} not found"
    fi
    if [ ! -e "$STAFF_FILE" ] ; then
	problems "staff file ${STAFF_FILE} not found"
    fi
    "${SCRIPTDIR}/secrets" decrypt "$R_ENV"
    scp "$ENV_FILE" "${R_USER}@${R_HOST}:/tmp/secrets.env"
    scp "$ROOM_FILE" "$STAFF_FILE" "${SCRIPTDIR}/roombaht_ctl-remote.sh" \
	"${R_USER}@${R_HOST}:/tmp"
    ROOM_FILE="$(basename "$ROOM_FILE")"
    STAFF_FILE="$(basename "$STAFF_FILE")"
    ssh -t "${R_USER}@${R_HOST}" \
	"sudo bash /tmp/roombaht_ctl-remote.sh init '/tmp/${ROOM_FILE}' '/tmp/${STAFF_FILE}' ; sudo rm /tmp/roombaht_ctl-remote.sh"
elif [ "$ACTION" == "backend-log" ] ; then
    ssh -t "${R_USER}@${R_HOST}" "sudo journalctl -f -u roombaht -u cron.service -t roombaht-oob -t uwsgi"
elif [ "$ACTION" == "frontend-log" ] ; then
    ssh -t "${R_USER}@${R_HOST}" "sudo tail -f /var/log/nginx/access.log /var/log/nginx/error.log"
elif [ "$ACTION" == "backend-restart" ] ; then
    ssh -t "${R_USER}${R_HOST}" "sudo journalctl restart roombaht"
elif [ "$ACTION" == "wipe" ] ; then
    echo "This will completely wipe the database and it will be super annoying to get it back."
    echo "Are you sure? [y/n]"
    read -r -s -n 1 answer
    if [ "$answer" != "y" ] ; then
	problems "user said no"
    fi
    "${SCRIPTDIR}/secrets" decrypt "$R_ENV"
    scp "$ENV_FILE" "${R_USER}@${R_HOST}:/tmp/secrets.env"
    scp "${SCRIPTDIR}/roombaht_ctl-remote.sh" "${R_USER}@${R_HOST}:/tmp"
    ssh "${R_USER}@${R_HOST}" "sudo bash /tmp/roombaht_ctl-remote.sh wipe ; sudo rm /tmp/roombaht_ctl-remote.sh"
elif [ "$ACTION" == "manage" ] ; then
    "${SCRIPTDIR}/secrets" decrypt "$R_ENV"
    scp "$ENV_FILE" "${R_USER}@${R_HOST}:/tmp/secrets.env"
    scp "${SCRIPTDIR}/roombaht_ctl-remote.sh" "${R_USER}@${R_HOST}:/tmp"
    ssh -t "${R_USER}@${R_HOST}" "sudo bash /tmp/roombaht_ctl-remote.sh manage $* ; sudo rm /tmp/roombaht_ctl-remote.sh"
elif [ "$ACTION" == "help" ] ; then
    usage
else
    usage
    exit 1
fi

---
test_name: "reports plz"
stages:
  - name: "can login as admin and get a jwt"
    request:
      url: "http://localhost:8000/api/login/"
      method: "POST"
      json:
        email: "testadmin@example.com"
        jwt: "test jwt"
      headers:
        content-type: "application/json"
    response:
      status_code: 201
      verify_response_with:
        - function: tavern.helpers:validate_jwt
          extra_kwargs:
            jwt_key: "jwt"
            key: "test"
            algorithms: "HS256"
            options:
              verify_signature: true
              verify_aud: false
        - function: tavern.helpers:validate_pykwalify
          extra_kwargs:
            schema:
              type: "map"
              mapping:
                admin:
                  type: "bool"
                  required: true
                jwt:
                  type: "str"
                  required: true
      save:
        json:
          jwt_token: "jwt"

  - name: "must specify fields"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
      headers:
        content-type: "application/json"
    response:
      status_code: 400

  - name: "must specify real hotel"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "hilton"
        report: "hotel"
      headers:
        content-type: "application/json"
    response:
      status_code: 400

  - name: "can fetch hotel report"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "ballys"
        report: "hotel"
      headers:
        content-type: "application/json"
    response:
      status_code: 200
      headers:
        "content-type": "text/csv"
      verify_response_with:
        function: "tavern_utils:report_validator"
        extra_kwargs:
          rows:
            - room_number: "500"
              names: "test user2"
              check_in: "1999-12-31"
              check_out: "2000-01-02"
              room_type: "Standard 2 Queens"

            - room_number: "501"
              names: "test user1"

            - room_number: "502"
              room_type: "King Bed"

  - name: "can fetch rooms list report"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "ballys"
        report: "roomslist"
      headers:
        content-type: "application/json"
    response:
      status_code: 200
      headers:
        "content-type": "text/csv"
      verify_response_with:
        function: "tavern_utils:report_validator"

  - name: "can fetch raw room report"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "ballys"
        report: "room"
      headers:
        content-type: "application/json"
    response:
      status_code: 200
      headers:
        "content-type": "text/csv"
      verify_response_with:
        function: "tavern_utils:report_validator"

  - name: "can fetch raw guest report"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "ballys"
        report: "guest"
      headers:
        content-type: "application/json"
    response:
      status_code: 200
      headers:
        "content-type": "text/csv"
      verify_response_with:
        function: "tavern_utils:report_validator"

  - name: "can fetch swaps report"
    request:
      url: "http://localhost:8000/api/fetch_reports/"
      method: "POST"
      json:
        jwt: "{jwt_token}"
        hotel: "ballys"
        report: "swaps"
      headers:
        content-type: "application/json"
    response:
      status_code: 200
      headers:
        "content-type": "text/csv"
      verify_response_with:
        function: "tavern_utils:report_validator"
